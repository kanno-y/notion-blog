import {
  MetadataProps,
  getAllPosts,
  getAllTags,
  getNumberOfPages,
  getNumberOfPagesByTags,
  getPostsByPage,
  getPostsForTopPage,
  getPostsTagAndPage,
} from '@/lib/notionAPI'
import Head from 'next/head'
import { SinglePost } from '@/components/Post/SinglePost'
import { GetStaticPaths, GetStaticProps } from 'next/types'
import { Pagination } from '@/components/Pagination/Pagination'

export const getStaticPaths: GetStaticPaths = async (context) => {
  const allTags = await getAllTags()
  let params: { params: { tag: string; page: string } }[] = []

  await Promise.all(
    allTags.map((tag) => {
      return getNumberOfPagesByTags(tag).then((numberOfPagesByTag: number) => {
        for (let i = 1; i <= numberOfPagesByTag; i++) {
          params.push({ params: { tag: tag, page: i.toString() } })
        }
      })
    })
  )
  console.log(params)

  return {
    paths: [{ params: { tag: 'blog', page: '1' } }],
    fallback: 'blocking',
  }
}

export const getStaticProps: GetStaticProps = async (context) => {
  const currentPage: string = context.params!.page!.toString()
  const currentTag: string = context.params!.tag!.toString()

  const upperCaseCurrentTag =
    currentTag.charAt(0).toUpperCase() + currentTag.slice(1)
  const posts = await getPostsTagAndPage(
    upperCaseCurrentTag,
    parseInt(currentPage, 10)
  )

  return {
    props: { posts },
    revalidate: 60, // 60秒ごと更新する(ISR)
  }
}
type Props = {
  posts: MetadataProps[]
}

const BlogTagPageList = ({ posts }: Props) => {
  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>Notion-Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container w-full mt-16">
        <h1 className="text-5xl font-medium text-center mb-16">
          Notion Blog🚀
        </h1>
      </main>
      <section className="sm:grid grid-cols-2 w-5/6 gap-3 mx-auto">
        {posts.map((post: MetadataProps) => (
          <div key={post.title}>
            <SinglePost
              title={post.title}
              description={post.description}
              date={post.date}
              slug={post.slug}
              tags={post.tags}
              isPaginationPage={true}
            />
          </div>
        ))}
      </section>
      {/* <Pagination numberOfPage={numberOfPage} /> */}
    </div>
  )
}

export default BlogTagPageList
